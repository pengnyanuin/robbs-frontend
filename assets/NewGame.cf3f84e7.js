import{_ as S,a as u,o as l,c as a,d as t,f as w,v as y,F as d,j as r,g as b,e as g,n as m,t as c}from"./index.6c04297e.js";const x={name:"games",data(){return{game:{title:"",mapSelected:null,deckSelected:null},decks:null,decksError:!1,decksLoading:!0,maps:null,mapsError:!1,mapsLoading:!0}},methods:{selectDeck(s){this.game.deckSelected=s},selectMap(s){this.game.mapSelected=s},createGame(){if(!this.game.title){alert("need a title!");return}if(this.game.mapSelected===null||this.game.deckSelected===null){alert("Error!");return}u.post("http://127.0.0.1:8000/game/new",{title:this.game.title,deck:this.decks[this.game.deckSelected].id,map:this.maps[this.game.mapSelected].id}).then(s=>{console.log(s.data),this.$router.push({name:"game",params:{id:s.data.id}})}).catch(function(s){console.log(s)}).finally(()=>{console.log("done")})}},mounted(){u.get("http://127.0.0.1:8000/decks").then(s=>{console.log(s.data),this.decks=s.data}).catch(s=>{console.log(s),this.decksError=!0}).finally(()=>{this.decksLoading=!1}),u.get("http://127.0.0.1:8000/maps").then(s=>{console.log(s.data),this.maps=s.data}).catch(s=>{console.log(s),this.mapsError=!0}).finally(()=>{this.mapsLoading=!1})}},C={class:"mb-3"},E=t("h2",null,"Title: ",-1),L={class:"row"},j={class:"col-md-6"},M={class:"mb-3"},P=t("h2",null,"Select a map:",-1),D={key:0,class:"loader"},I={key:1,class:"action__wrap"},T=["onClick"],B={key:2,class:"notice-message error"},G=t("p",null,"There was an error while loading available maps.",-1),N=[G],V={class:"mb-3"},F=t("h2",null,"Select a deck:",-1),z={key:0,class:"loader"},O={key:1,class:"action__wrap mb-3"},U=["onClick"],q={key:2,class:"notice-message error"},A=t("p",null,"There was an error while loading available decks.",-1),H=[A],J={class:"col-md-6"},Q={key:0,class:"map__preview"},R={class:"map__preview__view"},W=t("div",{class:"deck__preview"},null,-1);function X(s,n,Y,Z,e,_){return l(),a("div",null,[t("div",C,[E,w(t("input",{"onUpdate:modelValue":n[0]||(n[0]=i=>e.game.title=i),type:"text"},null,512),[[y,e.game.title]])]),t("div",L,[t("div",j,[t("div",M,[P,e.mapsLoading?(l(),a("div",D)):e.mapsError?(l(),a("div",B,N)):(l(),a("div",I,[(l(!0),a(d,null,r(e.maps,(i,o)=>(l(),a("a",{href:"#",class:m(["action",{selected:e.game.mapSelected===o}]),onClick:g(h=>_.selectMap(o),["prevent"]),key:o},[t("div",null,c(i.title),1),t("div",null,c(i.width)+" x "+c(i.height),1),t("div",null,c(i.maxPlayers)+" players",1)],10,T))),128))]))]),t("div",V,[F,e.decksLoading?(l(),a("div",z)):e.decksError?(l(),a("div",q,H)):(l(),a("div",O,[(l(!0),a(d,null,r(e.decks,(i,o)=>(l(),a("a",{href:"#",class:m(["action",{selected:e.game.deckSelected===o}]),onClick:g(h=>_.selectDeck(o),["prevent"]),key:o},c(i.name),11,U))),128))]))])]),t("div",J,[e.game.mapSelected!==null?(l(),a("div",Q,[t("div",R,[(l(!0),a(d,null,r(e.maps[e.game.mapSelected].fields,(i,o,h)=>(l(),a("div",{key:h,class:"map__preview__row"},[(l(!0),a(d,null,r(i,(k,p,f)=>(l(),a("div",{key:f,class:m(["map__preview__field",{"wall-field":k!==1,"box-field":e.maps[e.game.mapSelected].objectPositionsMap[o][p],"crown-field":e.maps[e.game.mapSelected].objectivePosition[1][0]===parseInt(o)&&e.maps[e.game.mapSelected].objectivePosition[1][1]===parseInt(p),"player-field":Object.values(e.maps[e.game.mapSelected].startingPositions).filter(v=>v[0]===parseInt(o)&&v[1]===parseInt(p)).length}])},null,2))),128))]))),128))])])):b("",!0),W])]),t("div",null,[t("a",{href:"#",onClick:n[1]||(n[1]=g(i=>_.createGame(),["prevent"])),class:m(["btn",{disabled:e.game.mapSelected===null||e.game.deckSelected===null}])},"Create",2)])])}const $=S(x,[["render",X]]);export{$ as default};
