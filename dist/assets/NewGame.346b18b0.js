import{_ as w,a as g,A as c,o as l,c as a,d as t,f as y,v as b,F as d,j as m,g as x,e as v,n as _,t as n}from"./index.39e1c27b.js";const A={name:"games",data(){return{game:{title:"",mapSelected:null,deckSelected:null},decks:null,decksError:!1,decksLoading:!0,maps:null,mapsError:!1,mapsLoading:!0}},methods:{selectDeck(s){this.game.deckSelected=s},selectMap(s){this.game.mapSelected=s},createGame(){if(!this.game.title){alert("need a title!");return}if(this.game.mapSelected===null||this.game.deckSelected===null){alert("Error!");return}g.post(c.getApiUrl()+"game/new",{title:this.game.title,deck:this.decks[this.game.deckSelected].id,map:this.maps[this.game.mapSelected].id},c.getAuthHeader()).then(s=>{console.log(s.data),this.$router.push({name:"game",params:{id:s.data.id}})}).catch(function(s){console.log(s)}).finally(()=>{console.log("done")})}},mounted(){g.get(c.getApiUrl()+"decks",c.getAuthHeader()).then(s=>{console.log(s.data),this.decks=s.data}).catch(s=>{console.log(s),this.decksError=!0}).finally(()=>{this.decksLoading=!1}),g.get(c.getApiUrl()+"maps",c.getAuthHeader()).then(s=>{console.log(s.data),this.maps=s.data}).catch(s=>{console.log(s),this.mapsError=!0}).finally(()=>{this.mapsLoading=!1})}},C={class:"mb-3"},E=t("h2",null,"Title: ",-1),L={class:"row"},j={class:"col-md-6"},M={class:"mb-3"},P=t("h2",null,"Select a map:",-1),D={key:0,class:"loader"},I={key:1,class:"action__wrap"},T=["onClick"],U={key:2,class:"notice-message error"},B=t("p",null,"There was an error while loading available maps.",-1),G=[B],H={class:"mb-3"},N=t("h2",null,"Select a deck:",-1),V={key:0,class:"loader"},F={key:1,class:"action__wrap mb-3"},z=["onClick"],O={key:2,class:"notice-message error"},q=t("p",null,"There was an error while loading available decks.",-1),J=[q],Q={class:"col-md-6"},R={key:0,class:"map__preview"},W={class:"map__preview__view"},X=t("div",{class:"deck__preview"},null,-1);function Y(s,r,Z,K,e,h){return l(),a("div",null,[t("div",C,[E,y(t("input",{"onUpdate:modelValue":r[0]||(r[0]=i=>e.game.title=i),type:"text"},null,512),[[b,e.game.title]])]),t("div",L,[t("div",j,[t("div",M,[P,e.mapsLoading?(l(),a("div",D)):e.mapsError?(l(),a("div",U,G)):(l(),a("div",I,[(l(!0),a(d,null,m(e.maps,(i,o)=>(l(),a("a",{href:"#",class:_(["action",{selected:e.game.mapSelected===o}]),onClick:v(p=>h.selectMap(o),["prevent"]),key:o},[t("div",null,n(i.title),1),t("div",null,n(i.width)+" x "+n(i.height),1),t("div",null,n(i.maxPlayers)+" players",1)],10,T))),128))]))]),t("div",H,[N,e.decksLoading?(l(),a("div",V)):e.decksError?(l(),a("div",O,J)):(l(),a("div",F,[(l(!0),a(d,null,m(e.decks,(i,o)=>(l(),a("a",{href:"#",class:_(["action",{selected:e.game.deckSelected===o}]),onClick:v(p=>h.selectDeck(o),["prevent"]),key:o},n(i.name),11,z))),128))]))])]),t("div",Q,[e.game.mapSelected!==null?(l(),a("div",R,[t("div",W,[(l(!0),a(d,null,m(e.maps[e.game.mapSelected].fields,(i,o,p)=>(l(),a("div",{key:p,class:"map__preview__row"},[(l(!0),a(d,null,m(i,(f,u,S)=>(l(),a("div",{key:S,class:_(["map__preview__field",{"wall-field":f!==1,"box-field":e.maps[e.game.mapSelected].objectPositionsMap[o][u],"crown-field":e.maps[e.game.mapSelected].objectivePosition[1][0]===parseInt(o)&&e.maps[e.game.mapSelected].objectivePosition[1][1]===parseInt(u),"player-field":Object.values(e.maps[e.game.mapSelected].startingPositions).filter(k=>k[0]===parseInt(o)&&k[1]===parseInt(u)).length}])},null,2))),128))]))),128))])])):x("",!0),X])]),t("div",null,[t("a",{href:"#",onClick:r[1]||(r[1]=v(i=>h.createGame(),["prevent"])),class:_(["btn",{disabled:e.game.mapSelected===null||e.game.deckSelected===null}])},"Create",2)])])}const ee=w(A,[["render",Y]]);export{ee as default};
